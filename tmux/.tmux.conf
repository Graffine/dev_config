# example: /usr/share/doc/tmux/examples/
# {{{ screen-keys.conf
# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^a.
set -g prefix ^a
unbind C-b
bind a send-prefix

# Config reload key
bind R source-file ~/.tmux.conf \; display-message "Config reloaded"

# Bind appropriate commands similar to screen.
# lockscreen x
unbind x
bind x lock-server

# screen create window
bind c new-window

# create windows and connect to remote server
bind -n M-1 new-window -n 'AWS-HRS-Server' 'ssh AWS-HRS-Server'
bind -n M-2 new-window -n 'AWS-HRS-RabbitMQ' 'ssh AWS-HRS-RabbitMQ'

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# change window title
unbind A
bind A command-prompt "rename-window %%"

# jump to last window
unbind ^A
bind ^A last-window

# kill session
unbind S
bind S confirm-before "kill-session"

# kill window
unbind W
bind W confirm-before "kill-window"

# kill pane
unbind P
bind P confirm-before "kill-pane"

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# split windows
unbind '"'
bind - split-window -v
unbind %
bind | split-window -h

# split windows and connect to remote server
bind -n M-- command-prompt -p "ssh:" "split-window -v 'ssh %1'"
bind -n M-| command-prompt -p "ssh:" "split-window -h 'ssh %1'"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r C-h resize-pane -L 10
bind -r C-j resize-pane -D 10
bind -r C-k resize-pane -U 10
bind -r C-l resize-pane -R 10

# vi-style controls for copy mode
setw -g mode-keys vi
# }}}

#### Global config
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-option -g status-left "#(/Users/graffine_wu/Projects/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(/Users/graffine_wu/Projects/tmux-powerline/powerline.sh right)"

set -g status-left "#[fg=white,bright,bg=blue] Session #[fg=yellow,bright,bg=blue]#S #[default] |" # session-name
set -g status-right "#[fg=red,bright][ #[fg=cyan]#{pane_current_path} #[fg=red]]#[default] #[fg=yellow,bright] %Y-%m-%d #[fg=green]%H:%M:%S #[default]#[fg=magenta,bright]#[default]"

# Scrollback
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Set repeat time (in ms)
set -g repeat-time 1000

#### COLOUR (Solarized 256)

## default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default
#
## default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
#
## pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01
#
## message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange
#
## pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
#
## clock
set-window-option -g clock-mode-colour colour64 #green

